#include ../includes/index.jsxinc
#include http_via_vbscript.jsx

var ANNONSEANSVARLIG = {
  navn: 'Geir Dorp',
  tlf: '22 85 32 69',
  tittel: 'annonseansvarlig',
  epost: 'geir.dorp@universitas.no'
}

// main export
function fetchContextData() {
  // build context dictionary to fill out placeholder in template file
  var data = _getIssueDataFromApi()
  var context = _staffContext(data)
  context.utg = context.issue = _issueContext(data)
  return context
}

function parseIsoDate(dt) {
  // "YYYY-MM-DD" -> Date
  var Y = parseInt(dt.slice(0, 4))
  var M = parseInt(dt.slice(5, 7)) - 1
  var D = parseInt(dt.slice(8, 10))
  var H = 12 // noon
  return new Date(Y, M, D, H)
}

function dateLine(dt) {
  // Date -> String
  // prettier-ignore
  var MONTHS = ['januar', 'februar', 'mars', 'april', 'mai', 'juni',
    'juli', 'august', 'september', 'oktober', 'november', 'desember']
  var DAYS = ['søn', 'man', 'tir', 'ons', 'tor', 'fre', 'lør']
  var day = DAYS[dt.getDay()] + 'dag'
  var month = MONTHS[dt.getMonth()]
  var year = dt.getFullYear()
  var date = dt.getDate() + '.'
  return [day, date, month, year].join(' ')
}

function _getIssueDataFromApi() {
  var ENDPOINT = 'https://universitas.no/api/site/'
  return JSON.parse(https(ENDPOINT).response)
  var dumpfile = File($.fileName).parent + '/api.site.dump.json'
  try {
    return loadData(dumpfile)
  } catch (e) {}
  var response = https(ENDPOINT)
  var data = JSON.parse(response.response)
  if (response.status == 200) dumpData(dumpfile, data)
  return data
}

function _issueContext(data) {
  // { nr: '15', åg: '80', dato: 'onsdag 23. oktober 1970' }
  return pipe(
    dotProp('issues.next'),
    applySpec({
      åg: pipe(
        prop('year'),
        add(-1946)
      ),
      nr: pipe(
        prop('issue_name'),
        match(/\d+/),
        head,
        parseInt
      ),
      pubDate: pipe(
        prop('publication_date'),
        parseIsoDate
      ),
      dato: pipe(
        prop('publication_date'),
        parseIsoDate,
        dateLine
      )
    })
  )(data)
}

function _staffContext(data) {
  var abbr = pipe(
    // str -> str
    // abbreviated titles for staff
    toLower,
    replace(/(sje|red|led|jou).*/g, ' $1'),
    replace(/^(...)\S* +(.).*$/, '$1$2'),
    trim
  )
  var formatPhone = pipe(
    defaultTo(''),
    replace(/\s/g, ''),
    replace(/^\+47/, ''),
    cond([
      [test(/^[49]\d{7}$/), replace(/(...)(..)(...)/, '$1 $2 $3')],
      [test(/^\d{8}$/), replace(/(..)(..)(..)(..)/, '$1 $2 $3 $4')],
      [T, identity]
    ]),
    replace(/ /g, '\u202f')
  )
  return pipe(
    prop('staff'),
    map(
      applySpec({
        navn: prop('display_name'),
        epost: pipe(
          prop('email'),
          defaultTo(''),
          toLower
        ),
        tlf: pipe(
          prop('phone'),
          formatPhone
        ),
        tittel: dotProp('position.title')
      })
    ),
    converge(zipObj, [
      map(
        pipe(
          prop('tittel'),
          abbr
        )
      ),
      identity
    ]),
    merge({ anan: ANNONSEANSVARLIG })
  )(data)
}

if (ifMain($.fileName)) {
  $.hiresTimer
  $.clear()
  var data = fetchContextData() // for development
  pp(data)
  $.hiresTimer
}
// vi: ft=javascript
