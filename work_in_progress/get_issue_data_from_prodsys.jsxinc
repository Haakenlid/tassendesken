#include ../_includes/index.jsxinc
#include ../_includes/prodsys.jsxinc
#include http_via_vbscript.jsx

var FILEPATTERN = /^UNI.*.indd$/
FILEPATTERN = /.indd$/


function main() {
  $.clear()
  config.DEBUG = true
//~   dr = mkdir(Folder('./foo/bar/foobar/')) 
//~   log([dr, dr.exists])  
  var data = get_data()
// var staff = getStaff(data)
  var issue = getIssue(data)
  var fileName = pageFileName (issue, '1')
  var files = map(fileName)([1,2,4,12,24])
  pp(files)
}

function mkdir(folder) {
  // assert that folder exists
  // works like mkdir -p and creates parent directories
  if (! folder.exists)
    mkdir(folder.parent)
    if (folder instanceof Folder)
      folder.create()
  return folder
}


function getIssue(data) {
  // utg: { nr: '15', åg: '80', dato: 'onsdag 23. oktober 1970' },
  var issue = path(['issues', 'next'])(data)
  var data = {
    'åg': issue.year - 1946,
    'nr': parseInt(issue.issue_name.split('/')[0]),
  }
  return pipe(
    prop('publication_date'),
    parseIsoDate,
    merge(data),
  )(issue)
}

var nextWeekDay = curry(function nextWeekDay(dayNumber, dt) {
  // zero indexed day number {0:S,1:M,2:T,3:W,4:T,5:F,6:S}
  dt = dt ? new Date(dt) : new Date()
  dt.setDate(dt.getDate() + (7 + dayNumber - dt.getDay()) % 7)
  return dt
})

function fileNameDateStamp(dt) {
  // pdf datestamp format "YYMMDD"
  var YY = dt
    .getFullYear()
    .toString()
    .slice(-2)
  var MM = zeroPad(2)(dt.getMonth() + 1)
  var DD = zeroPad(2)(dt.getDate())
  return YY + MM + DD
}

function issueFolder(issueNumber) {
  // number -> string
  return config.rotMappe + zeroPad(2)(issueNumber)
}

var pageFileName = curry(function pageFileName(issue, typeNumber, pageNumber) {
  // {k:v} -> number -> number -> File
  var X = typeNumber  // 1 = vanlig, 2 = magasin
  var YYMMDD = fileNameDateStamp(issue.pubDate)
  var PP = zeroPad(2)(pageNumber)
  var filename = 'UNI1'+X+'VER'+YYMMDD+PP+'000.indd'
  return [issueFolder(issue.nr), 'INDESIGN', filename].join('/')
})
 
var abbr = pipe(
  // str -> str
  // abbreviated titles for staff
  toLower,
  replace(/(sje|red|led|jou).*/g, ' $1'),
  replace(/^(...)\S* +(.).*$/, '$1$2'),
  trim,
)

function parseIsoDate(dt) {
  var MONTHS = [
  'januar',
  'februar',
  'mars',
  'april',
  'mai',
  'juni',
  'juli',
  'august',
  'september',
  'oktober',
  'november',
  'desember']
  var Y = parseInt(dt.slice(0,4))
  var M = parseInt(dt.slice(5,7))
  var D = parseInt(dt.slice(8,10))
  var month = MONTHS[M-1]
  var datestring = 'onsdag ' + D + '. ' + month + ' ' + Y
  return {
    dato: datestring,
    pubDate: new Date(Y, M - 1, D, 8, 0),
  }
}

function objFromPairs(pairs) {
  var rv = {}
  for (var i=0; i<pairs.length; i++)
    rv[pairs[i][0]] = pairs[i][1]
  return rv
}

function zzip(a, b) {
  var rv = []
  for (var i=0; i<a.length && i < b.length; i++) 
    rv[i] = [a[i], b[i]]
  return rv
}

function getStaff(data) {
  return pipe(
  prop('staff'),
  map(applySpec({
    navn: prop('display_name'),
    epost: prop('email'),
    tlf: prop('phone'),
    tittel: dotProp('position.title'),
  })),
  converge(zzip , [map(pipe(prop('tittel'), abbr)), identity]),
  objFromPairs,
  )(data)
}

function dumpData(path, data) {
  var file = new File(path)
  log('dumping: ' + file.fullName)
  file.open('w')
  file.write(JSON.stringify(data, null, 2))
  file.close()  
}

function loadData(path) {
  var file = new File(path)
  log('loading: ' + file.fullName)
  file.open('r')
  data = file.read()
  file.close()
  return JSON.parse(data)
}

function get_data() {
  var  dumpfile = File($.fileName).parent + '/api.site.dump.json'
  var endpoint = 'https://universitas.no/api/site/'
  try {
    return loadData (dumpfile)
  } catch (e) {}
  var response = https(endpoint)
  var data = JSON.parse(response.response)
  if (response.status == 200)
    dumpData(dumpfile, data)
  return data
}

if (ifMain($.fileName)) main()
// vi: ft=javascript