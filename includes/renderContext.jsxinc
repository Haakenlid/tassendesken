#script "document format templatestrings"
#target "indesign"
#include "../includes/index.jsxinc"

function renderTemplate(doc, changeList) {
  // render template variables
  // (Document, [[k, v]]) -> undefined
  app.doScript(
    partial(_changePlaceHolders, doc, changeList),
    ScriptLanguage.JAVASCRIPT,
    undefined,
    UndoModes.FAST_ENTIRE_SCRIPT,
    'change template strings'
  )
}

function buildChangeList(doc, context) {
  // (Document, {k: v|{k:v}}) -> [[k, v]]
  var kx = sort()(_findPlaceHolders(doc))
  var vx = map(flip(dotProp)(context))(kx)
  var changeList = zip(kx, vx)
  return changeList
}

function _changePlaceHolders(doc, changeList) {
  // (Document, [[k, v]]) -> undefined
  // changes placeholder tags in indesing document based on change list

  // setup
  var enableRedraw = app.scriptPreferences.enableRedraw
  app.scriptPreferences.enableRedraw = false
  _clearGrepSearchOptions()
  app.findChangeGrepOptions.properties = {
    includeHiddenLayers: true,
    includeMasterPages: true
  }
  // replace each item
  for (var i = 0; i < changeList.length; i++) {
    var k = changeList[i][0]
    var v = changeList[i][1]
    if (v) {
      app.findGrepPreferences.findWhat = '(?i)\\{\\{ *' + k + ' *\\}\\}'
      app.changeGrepPreferences.changeTo = '' + v
      app.changeGrep()
    } else {
      log('WARNING: key "' + k + '" doesn\'t have a replacement value', $)
    }
  }
  // cleanup
  _clearGrepSearchOptions()
  app.scriptPreferences.enableRedraw = enableRedraw
}

function _findPlaceHolders(doc) {
  // Document -> [String]
  // find all placeholder tags in indesign document
  var PATTERN = '\\{\\{.*?\\}\\}' // example: {{ person.name }}
  _clearGrepSearchOptions()
  app.findChangeGrepOptions.properties = {
    includeHiddenLayers: true,
    includeMasterPages: true
  }
  app.findGrepPreferences.properties = { findWhat: PATTERN }
  var searchResults = doc.findGrep()
  return pipe(
    map(
      pipe(
        prop('contents'),
        toLower,
        replace(/[}{ ]/g, '')
      )
    ),
    uniq
  )(searchResults)
}

function _clearGrepSearchOptions() {
  // reset active grep search preferences and options to defaults
  app.findGrepPreferences = NothingEnum.nothing
  app.findChangeGrepOptions = NothingEnum.nothing
  app.changeGrepPreferences = NothingEnum.nothing
}

// vi: ft=javascript
